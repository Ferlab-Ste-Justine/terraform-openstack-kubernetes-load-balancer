global
  ssl-server-verify none
  user www-data
  group www-data
  log stdout local0 info

defaults
  mode tcp
  timeout connect 5000ms
  timeout client 5000ms
  timeout server 5000ms
  log global

resolvers internal_dns
%{ for ip in kubernetes.nameserver_ips ~}
  nameserver dns_${ip} ${ip}:53
%{ endfor ~}
  resolve_retries      3
  timeout retry        1s
  hold other           5s
  hold refused         5s
  hold nx              5s
  hold timeout         5s
  hold valid           5s

backend k8_ingress_http_servers
  balance roundrobin
  option tcp-check
  tcp-check connect
  default-server inter 1000ms rise 1 fall 1
  timeout server ${kubernetes.workers.ingress_http_timeout}
  server-template k8_workers ${kubernetes.workers.max_count} workers.${kubernetes.domain}:${kubernetes.workers.ingress_http_port} check maxconn ${kubernetes.workers.ingress_max_http_connections} resolvers internal_dns init-addr none

frontend k8_ingress_http_server
%{ if tunnel.enabled ~}
  bind 127.0.0.1:80
%{ else ~}
  bind *:80
%{ endif ~}
  mode tcp
  timeout client ${kubernetes.workers.ingress_http_timeout}
  default_backend k8_ingress_http_servers

backend k8_ingress_https_servers
  balance roundrobin
  option tcp-check
  tcp-check connect ssl
  default-server inter 1000ms rise 1 fall 1
  timeout server ${kubernetes.workers.ingress_https_timeout}
  server-template k8_workers ${kubernetes.workers.max_count} workers.${kubernetes.domain}:${kubernetes.workers.ingress_https_port} check maxconn ${kubernetes.workers.ingress_max_https_connections} resolvers internal_dns init-addr none

frontend k8_ingress_https_server
%{ if tunnel.enabled ~}
  bind 127.0.0.1:443
%{ else ~}
  bind *:443
%{ endif ~}
  mode tcp
  timeout client ${kubernetes.workers.ingress_https_timeout}
  default_backend k8_ingress_https_servers

backend k8_api_servers
  balance roundrobin
  option tcp-check
  tcp-check connect ssl
  default-server inter 1000ms rise 1 fall 5
  timeout server ${kubernetes.masters.api_timeout}
  server-template k8_masters ${kubernetes.masters.max_count} masters.${kubernetes.domain}:${kubernetes.masters.api_port} check maxconn ${kubernetes.masters.max_api_connections} resolvers internal_dns init-addr none

frontend k8_api
%{ if tunnel.enabled ~}
  bind 127.0.0.1:6443
%{ else ~}
  bind *:6443
%{ endif ~}
  mode tcp
  timeout client ${kubernetes.masters.api_timeout}
  default_backend k8_api_servers